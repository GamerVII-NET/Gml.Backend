@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Gml.Web.Client.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Log in</PageTitle>

<div class="container" bis_skin_checked="1">
    <p class="text-center">
        <a href="../dashboard/dashboard.html" class="d-flex align-items-center justify-content-center">
            <svg class="icon icon-xs me-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
            </svg> Back to homepage
        </a>
    </p>
    <StatusMessage Message="@errorMessage"/>
    <div class="row justify-content-center form-bg-image" data-background-lg="../../assets/img/illustrations/signin.svg" style="background: url(&quot;../../assets/img/illustrations/signin.svg&quot;);" bis_skin_checked="1">
        <div class="col-12 d-flex align-items-center justify-content-center" bis_skin_checked="1">
            <div class="bg-white shadow border-0 rounded border-light p-4 p-lg-5 w-100 fmxw-500" bis_skin_checked="1">
                <div class="text-center text-md-center mb-4 mt-md-0" bis_skin_checked="1">
                    <h1 class="mb-0 h3">Sign in to our platform</h1>
                </div>

                <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                    <DataAnnotationsValidator/>
                    <ValidationSummary class="text-danger" role="alert"/>
                    <div class="form-group mb-4" bis_skin_checked="1">
                        <label for="email">Your Email</label>
                        <div class="input-group" bis_skin_checked="1">
                            <span class="input-group-text" id="basic-addon1">
                                <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
                                </svg>
                            </span>
                            <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com"/>
                            <ValidationMessage For="() => Input.Email" class="text-danger"/>
                        </div>
                    </div>
                    <div class="form-group" bis_skin_checked="1">
                        <div class="form-group mb-4" bis_skin_checked="1">
                            <label for="password">Your Password</label>
                            <div class="input-group" bis_skin_checked="1">
                                <span class="input-group-text" id="basic-addon2">
                                    <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>
                                    </svg>
                                </span>
                                <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password"/>
                                <ValidationMessage For="() => Input.Password" class="text-danger"/>
                            </div>

                            <ValidationMessage For="() => Input.Email" class="text-danger"/>
                        </div>
                        <div class="d-flex justify-content-between align-items-top mb-4" bis_skin_checked="1">
                            <div class="form-check" bis_skin_checked="1">
                                <InputCheckbox class="form-check-input" type="checkbox" @bind-Value="Input.RememberMe" id="remember"/>
                                <label class="form-check-label mb-0" for="remember">Remember me</label>
                            </div>
                            <div bis_skin_checked="1">
                                <a href="Account/ForgotPassword" class="small text-right">Lost password?</a>
                            </div>
                        </div>
                    </div>
                    <div class="d-grid" bis_skin_checked="1">
                        <button type="submit" class="btn btn-gray-800">Sign in</button>
                    </div>
                </EditForm>
                <div class="d-flex justify-content-center align-items-center mt-4" bis_skin_checked="1">
                    <span class="fw-normal">Not registered? <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))" class="fw-bold">Create account</a></span>
                </div>
            </div>
        </div>
    </div>
</div>
@* *@
@* <h1>Log in</h1> *@
@* <div class="row"> *@
@*     <div class="col-md-4"> *@
@*         <section> *@
@*             <StatusMessage Message="@errorMessage"/> *@
@*             <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login"> *@
@*                 <DataAnnotationsValidator/> *@
@*                 <h2>Use a local account to log in.</h2> *@
@*                 <hr/> *@
@*                 <ValidationSummary class="text-danger" role="alert"/> *@
@*                 <div class="form-floating mb-3"> *@
@*                     <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com"/> *@
@*                     <label for="email" class="form-label">Email</label> *@
@*                     <ValidationMessage For="() => Input.Email" class="text-danger"/> *@
@*                 </div> *@
@*                 <div class="form-floating mb-3"> *@
@*                     <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password"/> *@
@*                     <label for="password" class="form-label">Password</label> *@
@*                     <ValidationMessage For="() => Input.Password" class="text-danger"/> *@
@*                 </div> *@
@*                 <div class="checkbox mb-3"> *@
@*                     <label class="form-label"> *@
@*                         <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input"/> *@
@*                         Remember me *@
@*                     </label> *@
@*                 </div> *@
@*                 <div> *@
@*                     <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button> *@
@*                 </div> *@
@*                 <div> *@
@*                     <p> *@
@*                         <a href="Account/ForgotPassword">Forgot your password?</a> *@
@*                     </p> *@
@*                     <p> *@
@*                         <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Register as a new user</a> *@
@*                     </p> *@
@*                     <p> *@
@*                         <a href="Account/ResendEmailConfirmation">Resend email confirmation</a> *@
@*                     </p> *@
@*                 </div> *@
@*             </EditForm> *@
@*         </section> *@
@*     </div> *@
@*     <div class="col-md-6 col-md-offset-2"> *@
@*         <section> *@
@*             <h3>Use another service to log in.</h3> *@
@*             <hr/> *@
@*             <ExternalLoginPicker/> *@
@*         </section> *@
@*     </div> *@
@* </div> *@

@code {
    private string? errorMessage;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery] private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        // This doesn't count login failures towards account lockout
        // To enable password failures to trigger account lockout, set lockoutOnFailure: true
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo(
                "Account/LoginWith2fa",
                new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            RedirectManager.RedirectTo("Account/Lockout");
        }
        else
        {
            errorMessage = "Error: Invalid login attempt.";
        }
    }

    private sealed class InputModel
    {
        [Required] [EmailAddress] public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")] public bool RememberMe { get; set; }
    }

}
