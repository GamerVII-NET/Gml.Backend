name: gml-core

x-environment:
  &default-environment
  DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  SECRET_KEY: ${GLITCHTIP_SECRET_KEY} # best to run openssl rand -hex 32
  PORT: 8000
  EMAIL_URL: consolemail:// # Example smtp://email:password@smtp_url:port https://glitchtip.com/documentation/install#configuration
  GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
  DEFAULT_FROM_EMAIL: ${ADMIN_EMAIL}
  CELERY_WORKER_AUTOSCALE: "1,3"  # Scale between 1 and 3 to prevent excessive memory usage. Change it or remove to set it to the number of cpu cores.
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "10000"

x-depends_on:
  &default-depends_on
  - postgres
  - redis

services:

  filebrowser:
    image: filebrowser/filebrowser
    container_name: file-browser
    user: "${UID}:${GID}"
    restart: always
    environment:
      - FB_BASEURL=/filebrowser
    volumes:
      - shared-volume:/srv
    ports:
      - ${PORT_GML_FILES}:80
    networks:
      - gml-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    volumes:
      - pg-data:/var/lib/postgresql/data

  redis:
    image: redis
    restart: unless-stopped

  glitchtip-web:
    image: glitchtip/glitchtip
    depends_on: *default-depends_on
    ports:
      - "${PORT_GML_SENTRY}:8000"
    environment: *default-environment
    restart: unless-stopped
    volumes:
      - uploads:/code/uploads

  glitchtip-worker:
    image: glitchtip/glitchtip
    command: ./bin/run-celery-with-beat.sh
    depends_on: *default-depends_on
    environment: *default-environment
    restart: unless-stopped
    volumes:
      - uploads:/code/uploads

  glitchtip-migrate:
    image: glitchtip/glitchtip
    depends_on: *default-depends_on
    command: "./manage.py migrate"
    environment: *default-environment

  gml-web-frontend:
    image: gml-web-frontend
    container_name: gml-frontend
    restart: always
    build:
      context: frontend/Gml.Web.Client
      dockerfile: Dockerfile
    ports:
      - ${PORT_GML_FRONTEND}:8081
    networks:
      - gml-network

  gml-web-api:
    image: ghcr.io/gamervii-net/gml.web.api:master
    container_name: gml-web-api
    restart: always
    volumes:
      - shared-volume:/home/app
    ports:
      - "${PORT_GML_BACKEND}:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082
    networks:
      - gml-network

  gml-web-skins:
    image: ghcr.io/gamervii-net/gml.web.skin.service:master
    container_name: gml-web-skins
    restart: always
    ports:
      - "${PORT_GML_SKINS}:8085"
    networks:
      - gml-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8085;
    volumes:
      - shared-volume:/app/Storage

networks:
  gml-network:
    attachable: true

volumes:
  shared-volume:
  pg-data:
  uploads:
